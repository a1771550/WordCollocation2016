@using UI.Helpers
@using UI.Models.Account
@model UI.Models.Account.RegisterViewModel

@{
	ViewBag.Title = THResources.Resources.ResetPassword;
	UserErrMsg msg;

	AccountHelper.InitUserErrMsgs(out msg);
}
<style>
	/* Change the white to any color ;)-*/
	html > /**/ body input:-webkit-autofill {
		-webkit-box-shadow: 0 0 0 1000px #f6f6ed inset;
		box-shadow: 0 0 0 1000px #f6f6ed inset;
	}
</style>

<div class="span4">
	<h3>@ViewBag.Title</h3>
	@Html.Partial("_ViewBagErrorList")
	<section id="registerForm">

		@{
			if (ViewBag.ErrorList != null && ViewBag.ErrorList.Count > 0)
			{
				ViewDataDictionary dict = new ViewDataDictionary();
				dict.Add("ErrorList", ViewBag.ErrorList);
				@Html.Partial("_ModalErrorListPartial", dict)
			}
		}


		@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { id = "resetPwd-form" }))
		{
			@Html.AntiForgeryToken()

			@Html.ValidationSummary(false)
			<p id="alert" class="text-danger"></p>

			<input type="hidden" id="pwdlength" value="@THResources.Resources.PasswordLengthError" />
			<input type="hidden" id="confirmPwdError" value="@THResources.Resources.ConfirmPasswordError" />

			<input type="hidden" id="Email" name="Email" value="@Model.Email"/>
			<div class="form-group">
				<label for="Password" class="labelField">@THResources.Resources.Password <span id="pwdFormat">(@THResources.Resources.PasswordFormat1)</span></label>

				<input type="text" id="Password" name="Password" style="width: 90%;" placeholder="@THResources.Resources.Password" />&nbsp;<img src="@Url.Content("~/Images/ok.png")" class="iOk" id="iPwdOk" />
				<input type="hidden" id="PwdRequired" value="@msg.PwdRequired" />
				<input type="hidden" id="PwdLenErr" value="@msg.PwdLenErr" />
				<span id="Password-error" class="field-validation-error"></span>

			</div>
			<div class="form-group">
				<label for="ConfirmPassword" class="labelField">@THResources.Resources.ConfirmPassword</label>

				<input type="text" id="ConfirmPassword" name="ConfirmPassword" style="width: 90%;" placeholder="@THResources.Resources.ConfirmPassword" />&nbsp;<img src="@Url.Content("~/Images/ok.png")" class="iOk" id="iConPwdOk" />
				<input type="hidden" id="ConfirmPwdRequired" value="@msg.ConfirmPwdRequired" />
				<input type="hidden" id="PwdLenErr" value="@msg.PwdLenErr" />
				<input type="hidden" id="ConfirmPwdError" value="@msg.ConfirmPwdErr" />
				<span id="ConfirmPassword-error" class="field-validation-error"></span>

			</div>
			<div class="form-group form-submit">

				<button type="submit" id="btnSubmit">@THResources.Resources.Send</button>

			</div>
		}
	</section>
</div>
@Scripts.Render("~/bundles/resetPassword")