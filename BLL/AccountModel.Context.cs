//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AccountEntities : DbContext
    {
        public AccountEntities()
            : base("name=AccountEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserInRole> UserInRoles { get; set; }
    
        public virtual int AddRole(string name, string code)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRole", nameParameter, codeParameter);
        }
    
        public virtual int CheckIfDuplicatedEmail(string email, ObjectParameter count)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckIfDuplicatedEmail", emailParameter, count);
        }
    
        public virtual int DeleteUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", emailParameter);
        }
    
        public virtual ObjectResult<GetRoleByCode_Result> GetRoleByCode(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleByCode_Result>("GetRoleByCode", codeParameter);
        }
    
        public virtual ObjectResult<GetRoles_Result> GetRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoles_Result>("GetRoles");
        }
    
        public virtual ObjectResult<GetRolesByEmail_Result> GetRolesByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRolesByEmail_Result>("GetRolesByEmail", emailParameter);
        }
    
        public virtual ObjectResult<GetUserByEmail_Result> GetUserByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByEmail_Result>("GetUserByEmail", emailParameter);
        }
    
        public virtual int GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsers");
        }
    
        public virtual int ResetPassword(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetPassword", emailParameter, passwordParameter);
        }
    
        public virtual int UpdateRole(string code, string name, byte[] rowVersion)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var rowVersionParameter = rowVersion != null ?
                new ObjectParameter("RowVersion", rowVersion) :
                new ObjectParameter("RowVersion", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRole", codeParameter, nameParameter, rowVersionParameter);
        }
    
        public virtual int UpdateUser(string email, string lastName, string firstName, string password, string registerToken, byte[] rowVersion)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var registerTokenParameter = registerToken != null ?
                new ObjectParameter("RegisterToken", registerToken) :
                new ObjectParameter("RegisterToken", typeof(string));
    
            var rowVersionParameter = rowVersion != null ?
                new ObjectParameter("RowVersion", rowVersion) :
                new ObjectParameter("RowVersion", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", emailParameter, lastNameParameter, firstNameParameter, passwordParameter, registerTokenParameter, rowVersionParameter);
        }
    }
}
